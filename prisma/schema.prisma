generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model devices {
  device_id  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    BigInt?
  user_agent String?
  is_trusted Boolean?            @default(false)
  ip_address Unsupported("cidr")
  created_at DateTime?           @default(now()) @db.Timestamp(6)
  status     device_status
  users      users?              @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  sessions   sessions[]

  @@index([status], map: "idx_devices_status")
  @@index([user_id], map: "idx_devices_user_id")
}

model sessions {
  session_id String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    BigInt?
  device_id  String?   @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)
  expired_at DateTime? @default(dbgenerated("(created_at + '5 days'::interval)")) @db.Timestamp(6)
  devices    devices?  @relation(fields: [device_id], references: [device_id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "idx_session_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model user_contacts {
  user_contacts_id                      BigInt    @id @default(autoincrement())
  user_id                               BigInt?
  contact_id                            BigInt?
  is_blocked                            Boolean?
  created_at                            DateTime? @default(now()) @db.Timestamp(6)
  updated_at                            DateTime? @default(now()) @db.Timestamp(6)
  users_user_contacts_contact_idTousers users?    @relation("user_contacts_contact_idTousers", fields: [contact_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  users_user_contacts_user_idTousers    users?    @relation("user_contacts_user_idTousers", fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, contact_id])
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  user_id                                       BigInt          @id @default(autoincrement())
  email                                         String          @unique @db.VarChar(30)
  username                                      String          @db.VarChar(20)
  about                                         String?         @db.VarChar(100)
  password                                      String
  last_login                                    DateTime        @default(now()) @db.Timestamp(6)
  is_active                                     Boolean?        @default(true)
  devices                                       devices[]
  sessions                                      sessions[]
  user_contacts_user_contacts_contact_idTousers user_contacts[] @relation("user_contacts_contact_idTousers")
  user_contacts_user_contacts_user_idTousers    user_contacts[] @relation("user_contacts_user_idTousers")

  @@index([email], map: "idx_user_email")
}

enum device_status {
  active
  inactive
  blocked
}
